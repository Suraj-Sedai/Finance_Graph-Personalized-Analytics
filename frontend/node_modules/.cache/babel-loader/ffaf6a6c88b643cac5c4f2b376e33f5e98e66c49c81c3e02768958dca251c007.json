{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\FinanceManagement\\\\frontend\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\n// src/components/LoginForm.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate to navigate to other pages\nimport { loginUser } from '../api'; // API function for login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Initialize useNavigate hook\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await loginUser(username, password);\n      localStorage.setItem('token', response.access); // Store JWT token in localStorage\n      localStorage.setItem('username', username); // Store username in localStorage\n      alert('Login successful!');\n      navigate('/home'); // Redirect to home page after login\n    } catch (error) {\n      console.error('Error logging in', error);\n      alert('Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","loginUser","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","response","localStorage","setItem","access","alert","error","console","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/FinanceManagement/frontend/src/components/LoginForm.js"],"sourcesContent":["// src/components/LoginForm.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate to navigate to other pages\r\nimport { loginUser } from '../api';  // API function for login\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();  // Initialize useNavigate hook\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await loginUser(username, password); \r\n            localStorage.setItem('token', response.access);  // Store JWT token in localStorage\r\n            localStorage.setItem('username', username);  // Store username in localStorage\r\n            alert('Login successful!');\r\n            navigate('/home');  // Redirect to home page after login\r\n        } catch (error) {\r\n            console.error('Error logging in', error);\r\n            alert('Login failed');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Login</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;AACjD,SAASC,SAAS,QAAQ,QAAQ,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC,CAAC,CAAE;;EAEjC,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,SAAS,CAACK,QAAQ,EAAEE,QAAQ,CAAC;MACpDO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACG,MAAM,CAAC,CAAC,CAAE;MACjDF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEV,QAAQ,CAAC,CAAC,CAAE;MAC7CY,KAAK,CAAC,mBAAmB,CAAC;MAC1BR,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAE;IACxB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCD,KAAK,CAAC,cAAc,CAAC;IACzB;EACJ,CAAC;EAED,oBACIf,OAAA;IAAMkB,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBACzBnB,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAGd,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACe,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF5B,OAAA;MACIoB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAGd,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACe,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF5B,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEf,CAAC;AAAC1B,EAAA,CApCID,SAAS;EAAA,QAGMJ,WAAW;AAAA;AAAAgC,EAAA,GAH1B5B,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}