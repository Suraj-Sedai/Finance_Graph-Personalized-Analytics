{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\Project\\\\Finance_Graph-Personalized-Analytics\\\\frontend\\\\src\\\\components\\\\AddTransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTransactionForm = () => {\n  _s();\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const [date, setDate] = useState('');\n  const [categories] = useState(['Food', 'Entertainment', 'Bills', 'Travel', 'Shopping']); // Static categories\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('token');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!description || !amount || !category || !date) {\n      setError('All fields are required.');\n      return;\n    }\n    if (amount <= 0) {\n      setError('Amount must be greater than zero.');\n      return;\n    }\n    const transactionData = {\n      description,\n      amount: parseFloat(amount),\n      // Convert to number\n      category,\n      date\n    };\n    console.log(\"Sending transaction data:\", transactionData); // Debugging log\n\n    axios.post('http://127.0.0.1:8000/api/transactions/', transactionData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => {\n      alert('Transaction added successfully!');\n      setDescription('');\n      setAmount('');\n      setCategory('');\n      setDate('');\n      setError('');\n    }).catch(error => {\n      var _error$response;\n      console.log(\"Error response:\", error.response); // Log the error response for debugging\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        alert('Session expired. Please log in again.');\n        localStorage.clear();\n        navigate('/login');\n      } else {\n        var _error$response2, _error$response2$data;\n        setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to add transaction.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back_button\",\n      onClick: () => navigate('/home'),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"arrow_back_2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), \" Back\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user_info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined user_icon\",\n        children: \"account_circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction_form_wrapper\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error_message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"transaction_form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form_heading\",\n          children: \"Add a New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form_input\",\n          placeholder: \"Description\",\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form_input\",\n          placeholder: \"Amount\",\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(parseFloat(e.target.value) || '') // Ensure it's a number\n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form_select\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), categories.map((categoryOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: categoryOption,\n            children: categoryOption\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form_input\",\n          placeholder: \"Date\",\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form_button\",\n          type: \"submit\",\n          children: \"Add Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTransactionForm, \"Och9qYKkAkXbu2PnXTsNMRz+xfI=\", false, function () {\n  return [useNavigate];\n});\n_c = AddTransactionForm;\nexport default AddTransactionForm;\nvar _c;\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","AddTransactionForm","_s","description","setDescription","amount","setAmount","category","setCategory","date","setDate","categories","error","setError","navigate","username","localStorage","getItem","token","handleSubmit","e","preventDefault","transactionData","parseFloat","console","log","post","headers","Authorization","then","alert","catch","_error$response","response","status","clear","_error$response2","_error$response2$data","data","detail","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","type","value","onChange","target","required","map","categoryOption","index","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/Project/Finance_Graph-Personalized-Analytics/frontend/src/components/AddTransactionForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AddTransactionForm = () => {\r\n    const [description, setDescription] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [categories] = useState(['Food', 'Entertainment', 'Bills', 'Travel', 'Shopping']); // Static categories\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n    const username = localStorage.getItem('username');\r\n    const token = localStorage.getItem('token');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (!description || !amount || !category || !date) {\r\n            setError('All fields are required.');\r\n            return;\r\n        }\r\n    \r\n        if (amount <= 0) {\r\n            setError('Amount must be greater than zero.');\r\n            return;\r\n        }\r\n    \r\n        const transactionData = {\r\n            description,\r\n            amount: parseFloat(amount),  // Convert to number\r\n            category,\r\n            date,\r\n        };\r\n    \r\n        console.log(\"Sending transaction data:\", transactionData);  // Debugging log\r\n    \r\n        axios\r\n            .post('http://127.0.0.1:8000/api/transactions/', transactionData, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            })\r\n            .then(() => {\r\n                alert('Transaction added successfully!');\r\n                setDescription('');\r\n                setAmount('');\r\n                setCategory('');\r\n                setDate('');\r\n                setError('');\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error response:\", error.response);  // Log the error response for debugging\r\n                if (error.response?.status === 401) {\r\n                    alert('Session expired. Please log in again.');\r\n                    localStorage.clear();\r\n                    navigate('/login');\r\n                } else {\r\n                    setError(error.response?.data?.detail || 'Failed to add transaction.');\r\n                }\r\n            });\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"transaction_container\">\r\n            <button className=\"back_button\" onClick={() => navigate('/home')}>\r\n                <span className=\"material-symbols-outlined\">arrow_back_2</span> Back\r\n            </button>\r\n            <div className=\"user_info\">\r\n                <span className=\"material-symbols-outlined user_icon\">account_circle</span>\r\n                <p>{username}</p>\r\n            </div>\r\n            <div className=\"transaction_form_wrapper\">\r\n                {error && <p className=\"error_message\">{error}</p>}\r\n                <form className=\"transaction_form\" onSubmit={handleSubmit}>\r\n                    <h2 className=\"form_heading\">Add a New Transaction</h2>\r\n                    <input\r\n                        className=\"form_input\"\r\n                        placeholder=\"Description\"\r\n                        type=\"text\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        className=\"form_input\"\r\n                        placeholder=\"Amount\"\r\n                        type=\"number\"\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(parseFloat(e.target.value) || '')}  // Ensure it's a number\r\n                        required\r\n                    />\r\n                    <select\r\n                        className=\"form_select\"\r\n                        value={category}\r\n                        onChange={(e) => setCategory(e.target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select a category</option>\r\n                        {categories.map((categoryOption, index) => (\r\n                            <option key={index} value={categoryOption}>\r\n                                {categoryOption}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <input\r\n                        className=\"form_input\"\r\n                        placeholder=\"Date\"\r\n                        type=\"date\"\r\n                        value={date}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button className=\"form_button\" type=\"submit\">\r\n                        Add Transaction\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTransactionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}