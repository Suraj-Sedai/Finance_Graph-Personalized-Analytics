{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\FinanceManagement\\\\frontend\\\\src\\\\components\\\\AddTransactionForm.js\",\n  _s = $RefreshSig$();\n// src/components/AddTransactionForm.js\n\nimport React, { useState } from 'react';\nimport { addTransaction } from '../api'; // Assuming this API function exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTransactionForm = ({\n  onTransactionAdded\n}) => {\n  _s();\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const [date, setDate] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!description || !amount || !category || !date) {\n      alert('Please fill in all fields');\n      return;\n    }\n    const transactionData = {\n      description,\n      amount,\n      category,\n      date\n    };\n    try {\n      // Send the transaction data to the API (adjust the API function as needed)\n      const response = await addTransaction(transactionData);\n\n      // Optionally, notify the parent component that a transaction was added\n      onTransactionAdded(response.data);\n      alert('Transaction added successfully!');\n    } catch (error) {\n      console.error('Error adding transaction', error);\n      alert('Failed to add transaction');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Category\",\n      value: category,\n      onChange: e => setCategory(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTransactionForm, \"I+SFVO3GLdk4aJlCw7shOr/wUFc=\");\n_c = AddTransactionForm;\nexport default AddTransactionForm;\nvar _c;\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"names":["React","useState","addTransaction","jsxDEV","_jsxDEV","AddTransactionForm","onTransactionAdded","_s","description","setDescription","amount","setAmount","category","setCategory","date","setDate","handleSubmit","e","preventDefault","alert","transactionData","response","data","error","console","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/FinanceManagement/frontend/src/components/AddTransactionForm.js"],"sourcesContent":["// src/components/AddTransactionForm.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { addTransaction } from '../api';  // Assuming this API function exists\r\n\r\nconst AddTransactionForm = ({ onTransactionAdded }) => {\r\n    const [description, setDescription] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [date, setDate] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!description || !amount || !category || !date) {\r\n            alert('Please fill in all fields');\r\n            return;\r\n        }\r\n\r\n        const transactionData = { description, amount, category, date };\r\n\r\n        try {\r\n            // Send the transaction data to the API (adjust the API function as needed)\r\n            const response = await addTransaction(transactionData); \r\n\r\n            // Optionally, notify the parent component that a transaction was added\r\n            onTransactionAdded(response.data); \r\n            alert('Transaction added successfully!');\r\n        } catch (error) {\r\n            console.error('Error adding transaction', error);\r\n            alert('Failed to add transaction');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Amount\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"date\"\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Add Transaction</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddTransactionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}